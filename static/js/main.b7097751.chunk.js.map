{"version":3,"sources":["components/layout/Header.js","components/layout/Footer.js","components/io/Button.js","components/io/InputControlField.js","components/layout/side/community/CommunityCard.js","components/layout/side/howtouse/HowToUseCard.js","components/layout/side/howtouse/HowToUseSideMenu.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","class","onClick","id","document","getElementById","classList","contains","remove","add","Footer","size","Button","props","style","clickAction","children","InputControlField","title","type","defaultValue","onChange","e","target","value","React","Component","CommunityCard","this","HowToUseSideMenu","color","HowToUseCard","SETTINGS","amount","coloredSyntax","lowercaseLetters","uppercaseLetters","letters","alphanumeric","getRandomInt","min","max","Math","ceil","floor","random","CHAR_GENERATORS","name","regex","charGenerator","length","CHAR_GENERATOR_ARGUMENTS","generator","char","arr","generateString","replace","output","i","App","state","handleChange","bind","display","tDisplay","forEach","gen","genMatch","match","filter","found","argument","argMatch","generatedStr","setState","placeholder","onInput","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.b7097751.chunk.js","sourcesContent":["import {ViewGridIcon} from \"@heroicons/react/solid\";\r\nimport React from \"react\";\r\n\r\nexport function Header() {\r\n\r\n    function toggle(id) {\r\n        if (document.getElementById(id).classList.contains('hidden')) {\r\n            document.getElementById(id).classList.remove('hidden');\r\n        } else {\r\n            document.getElementById(id).classList.add('hidden');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <header className={\"fixed top-0 flex justify-between w-full h-14 text-white\"}>\r\n            <div className={\"flex gap-2 items-center\"}>\r\n                <ViewGridIcon class={\"h-14\"}></ViewGridIcon>\r\n                <a className={\"text-3xl\"}>String Generator</a>\r\n            </div>\r\n            <div className={\"flex gap-4 text-2xl px-4\"}>\r\n                <a className={\"cursor-pointer\"} onClick={() => toggle('howtousesidemenu')}>How to use</a>\r\n                {/*<a className={\"cursor-pointer\"} onClick={() => toggle('communitysidemenu')}>Community templates</a>*/}\r\n            </div>\r\n        </header>\r\n    );\r\n}\r\n","import {AiFillGithub} from \"react-icons/all\";\r\nimport React from \"react\";\r\n\r\nexport function Footer() {\r\n    return (\r\n        <footer className={\"fixed bottom-0 flex justify-end w-full h-auto text-white z-0\"}>\r\n            <AiFillGithub size={40}></AiFillGithub>\r\n        </footer>\r\n    );\r\n}\r\n","export function Button(props) {\r\n    return (\r\n        <button\r\n            className={\"flex items-center gap-2 rounded w-min p-2 text-xl hover:opacity-60 duration-500\"}\r\n            style={{\"background-color\": \"#1C232D\"}}\r\n            onClick={() => {if (props.clickAction != null) props.clickAction()}}\r\n        >\r\n            {props.children}\r\n        </button>\r\n    );\r\n}\r\n","export function InputControlField(props) {\r\n    return (\r\n        <div className={\"flex rounded h-10 pr-4\"} style={{\"background-color\": \"#303B4A\"}}>\r\n            <p style={{\"background-color\": \"#1C232D\"}} className={\"rounded w-auto bg-white p-2\"}>{props.title}</p>\r\n            <input\r\n                type={props.type}\r\n                className={\"w-full px-2 outline-none\"}\r\n                defaultValue={props.defaultValue}\r\n                onChange={(e) => {\r\n                    if (props.onChange != null) {\r\n                        props.onChange(e.target.value);\r\n                    }\r\n                }}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n","import React from \"react\";\r\n\r\nclass CommunityCard extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={{'background-color': '#303B4A'}} className={\"grid grid-rows-4 w-5/6 h-20 rounded-xl p-2\"}>\r\n                <h2 className={\"row-span-1 text-xl\"}>{this.props.title}</h2>\r\n                <h2 className={\"row-span-1\"} style={{'color': '#2473EA'}}>Example: {this.props.example}</h2>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CommunityCard;\r\n","import React from \"react\";\r\n\r\nclass CommunityCard extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={{'background-color': '#303B4A'}} className={\"rounded-xl w-5/6 flex flex-col gap-4 p-2\"}>\r\n                <h2 className={\"row-span-1 text-2xl\"}>{this.props.title}</h2>\r\n                {this.props.children}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CommunityCard;\r\n","import HowToUseCard from \"./HowToUseCard\";\r\nimport {AiFillCloseCircle} from \"react-icons/all\";\r\n\r\nexport default function HowToUseSideMenu() {\r\n\r\n    function toggle(id) {\r\n        if (document.getElementById(id).classList.contains('hidden')) {\r\n            document.getElementById(id).classList.remove('hidden');\r\n        } else {\r\n            document.getElementById(id).classList.add('hidden');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div id={\"howtousesidemenu\"} className={\"fixed h-full w-1/5 right-0 top p-5 pr-0 z-10 hidden\"} style={{\"background-color\": \"#1C232D\"}}>\r\n            <div className={\"grid grid-cols-5 gap-10\"}>\r\n                <h2 className={\"text-3xl col-span-4\"}>How to use</h2>\r\n                <a className={\"col-span-1 cursor-pointer\"} onClick={() => toggle('howtousesidemenu')}><AiFillCloseCircle color={\"#ffffff\"}></AiFillCloseCircle></a>\r\n            </div>\r\n            <div className={\"h-full flex flex-col gap-4 my-4 overflow-auto pb-10\"}>\r\n                <HowToUseCard title={\"What is String Generator?\"}>\r\n                    <p>String Generator generates strings you need. You can specify how they should be generated. I.e. you can choose if chars should generated randomly, how long they have to and in which pattern they should be.</p>\r\n                </HowToUseCard>\r\n                <HowToUseCard title={\"Which patterns exist?\"}>\r\n                    <p>String Generator has generator and generator arguments. An generator says what should be randomly generated. An generator argument says how the generator should generate i.e. how long a specific character group should be. Each generator may have an argument. Generator argumens don’t stand alone.</p>\r\n                    <table className={\"table-auto text-left\"}>\r\n                        <tr>\r\n                            <th>Generator</th>\r\n                            <th>Description</th>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>\\d</td>\r\n                            <td>Random digit</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>\\l</td>\r\n                            <td>Random lowercase alphabetic letter</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>\\u</td>\r\n                            <td>Random uppercase alphabetic letter</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>\\a</td>\r\n                            <td>Random alphabetic letter</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>\\.</td>\r\n                            <td>Random alphanumeric letter</td>\r\n                        </tr>\r\n                    </table>\r\n                    <table className={\"table-auto text-left\"}>\r\n                        <tr>\r\n                            <th>Argument</th>\r\n                            <th>Description</th>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>{\"{n}\"}</td>\r\n                            <td>Generates exactly n times</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>{\"{m,n}\"}</td>\r\n                            <td>Generates between m and n times (randomly)</td>\r\n                        </tr>\r\n                    </table>\r\n                </HowToUseCard>\r\n                <HowToUseCard title={\"How can I add an template?\"}>\r\n                    <p>If you want to add an template into the community template section, you have to follow these steps on Github and create a pull request.</p>\r\n                </HowToUseCard>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import './App.css';\nimport React from \"react\";\nimport {AiOutlineDownload, VscRunAll} from \"react-icons/all\";\nimport {Header} from \"./components/layout/Header\";\nimport {Footer} from \"./components/layout/Footer\";\nimport {Button} from \"./components/io/Button\";\nimport {InputControlField} from \"./components/io/InputControlField\";\nimport CommunitySideMenu from \"./components/layout/side/community/CommunitySideMenu\";\nimport HowToUseSideMenu from \"./components/layout/side/howtouse/HowToUseSideMenu\";\n\n/*\n *\n * Patterns:\n *\n * char generators:\n * \\d - random digit\n * \\l - random lowercase alphabetic letter\n * \\u - random uppercase alphabetic letter\n *\n * char generator arguments:\n * \\(any char generator){any number: n} - char generator generates n chars\n * \\(any char generator){any number: m, any number: n} - char generator generates random chars in range of m and n\n *\n */\n\nconst SETTINGS = {\n    amount: 1,\n    coloredSyntax: true\n};\n\nconst numbers = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'];\nconst lowercaseLetters = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'];\nconst uppercaseLetters = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'];\nconst letters = [...lowercaseLetters,...uppercaseLetters];\nconst alphanumeric = [...numbers, ...letters];\n\n// https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Global_Objects/Math/random\nfunction getRandomInt(min, max) {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min)) + min;\n}\n\nconst CHAR_GENERATORS = [\n    {\n        name: \"random digit\",\n        regex: /\\\\d({[\\d,]+})?/g, // \\d{n}\n        charGenerator: () => {\n            return getRandomInt(0, 9);\n        }\n    },\n    {\n        name: \"random lowercase letter\",\n        regex: /\\\\l({[\\d,]+})?/g, // \\d{n}\n        charGenerator: () => {\n            return lowercaseLetters[getRandomInt(0, lowercaseLetters.length - 1)];\n        }\n    },\n    {\n        name: \"random uppercase letter\",\n        regex: /\\\\u({[\\d,]+})?/g, // \\d{n}\n        charGenerator: () => {\n            return uppercaseLetters[getRandomInt(0, uppercaseLetters.length - 1)];\n        }\n    },\n    {\n        name: \"random alphabetic letter\",\n        regex: /\\\\a({[\\d,]+})?/g, // \\d{n}\n        charGenerator: () => {\n            return letters[getRandomInt(0, letters.length - 1)];\n        }\n    },\n    {\n        name: \"random alphanumberic letter\",\n        regex: /\\\\.({[\\d,]+})?/g, // \\d{n}\n        charGenerator: () => {\n            return alphanumeric[getRandomInt(0, alphanumeric.length - 1)];\n        }\n    }\n];\n\nconst CHAR_GENERATOR_ARGUMENTS = [\n    {\n        regex: /{\\W*(\\d+)\\W*,\\W*(\\d+)\\W*}/,\n        generator: (char, arr) => {\n            return generateString(char, arr[0]);\n        }\n    },\n    {\n        regex: /{\\W*\\d+\\W*}/,\n        generator: (char, arr) => {\n            return generateString(char, arr[0].replace(/[\\W{}]/g, ''));\n        }\n    }\n]\n\nfunction generateString(charGenerator, length) {\n    let output = \"\";\n    for (let i = 0; i < length; i++) {\n        output += charGenerator();\n    }\n    return output;\n}\n\n\nclass App extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            value: ''\n        };\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    handleChange(e) {\n        let value = e.target.value;\n        let display = \"\";\n\n        for (let i = 0; i < SETTINGS.amount; i++) {\n            let tDisplay = value;\n\n            CHAR_GENERATORS.forEach(gen => {\n                const genMatch = value.match(gen.regex);\n                if (genMatch != null) {\n                    genMatch.filter(match => match != null).forEach(match => {\n                        let found;\n                        for (let i = 0; i < CHAR_GENERATOR_ARGUMENTS.length; i++){\n                            const argument = CHAR_GENERATOR_ARGUMENTS[i];\n                            const argMatch = match.match(argument.regex);\n                            if (argMatch != null) {\n                                const generatedStr = argument.generator(gen.charGenerator, argMatch);\n                                tDisplay = tDisplay.replace(match, generatedStr);\n                                found = true;\n                                break;\n                            }\n                        }\n                        if (!found) {\n                            const generatedStr = gen.charGenerator();\n                            tDisplay = tDisplay.replace(match, generatedStr);\n                        }\n                    });\n                }\n            });\n            display += tDisplay + '\\n';\n        }\n\n        this.setState({\n            value: display\n        });\n    }\n\n    render() {\n        return (\n            <>\n                <Header/>\n                <main className={\"flex w-auto h-full items-center justify-center align-center text-white py-10 z-0\"}>\n                    <div className={\"flex w-full justify-center align-center\"}>\n                        <div className={\"flex flex-col px-2 w-1/5 gap-2\"}>\n                            <div className={\"flex flex-col\"}>\n                                <span>Input</span>\n                                <input id={\"input\"} className={\"rounded h-10 px-2\"} placeholder={\"Pattern\"} onInput={this.handleChange}/>\n                            </div>\n                            <div className={\"flex flex-col\"}>\n                                <span>Output options</span>\n                                <InputControlField title={\"Amount\"} type={\"number\"} defaultValue={SETTINGS.amount} onChange={(value) => {SETTINGS.amount = value}}></InputControlField>\n                            </div>\n                            <Button clickAction={() => {this.handleChange({target: document.getElementById(\"input\")})}}><VscRunAll color={\"#ffffff\"}></VscRunAll> Generate</Button>\n                        </div>\n                        <div className={\"flex flex-col px-2 w-1/5 gap-2\"}>\n                            <div className={\"flex flex-col\"}>\n                                <span>Output</span>\n                                <textarea className={\"rounded\"} defaultValue={this.state.value}></textarea>\n                            </div>\n                            {/*<Button><AiOutlineDownload></AiOutlineDownload> Download</Button>*/}\n                        </div>\n                    </div>\n                    {/*<CommunitySideMenu />*/}\n                    <HowToUseSideMenu />\n                    {/*<div className={\"fixed top-0 right-0 h-screen w-1/4 p-4\"} style={{\"background-color\": '#1C232D'}}>\n                        <div className={\"flex justify-between mb-10\"}>\n                            <h2 className={\"text-2xl\"}>How to use</h2>\n                            <a><AiFillCloseCircle></AiFillCloseCircle></a>\n                        </div>\n                        <div className={\"flex flex-col gap-2\"}>\n                            <CommunityCard title={\"Phone number\"} example={\"0 111-111 111\"}></CommunityCard>\n                            <CommunityCard title={\"Phone number\"} example={\"0 111-111 111\"}></CommunityCard>\n                            <CommunityCard title={\"Phone number\"} example={\"0 111-111 111\"}></CommunityCard>\n                            <CommunityCard title={\"Phone number\"} example={\"0 111-111 111\"}></CommunityCard>\n                        </div>\n                    </div>*/}\n                </main>\n                <Footer/>\n            </>\n            );\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}